// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using RPGPlaza.Data;
using RPGPlaza.Models;
using System;

namespace RPGPlaza.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180401173805_SavageWorldsDatabasesforCharacters")]
    partial class SavageWorldsDatabasesforCharacters
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("RPGPlaza.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWArmor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArmorValue");

                    b.Property<int>("BookId");

                    b.Property<double>("Cost");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<int>("TimePeriod");

                    b.Property<int>("Type");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.ToTable("SWArmors");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWArmorCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArmorValue");

                    b.Property<double>("Cost");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<int>("TimePeriod");

                    b.Property<int>("Type");

                    b.Property<string>("UserID");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.ToTable("SWArmorsCustom");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SWBooks");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdvancesHeroicJson");

                    b.Property<string>("AdvancesLegendaryJson");

                    b.Property<string>("AdvancesNoviceJson");

                    b.Property<string>("AdvancesSeasonedJson");

                    b.Property<string>("AdvancesVeteranJson");

                    b.Property<int>("Agility");

                    b.Property<string>("ArmoursJson");

                    b.Property<string>("Background");

                    b.Property<string>("Description");

                    b.Property<string>("EdgesJson");

                    b.Property<string>("Gender");

                    b.Property<string>("HindrancesJson");

                    b.Property<string>("MundaneItemsJson");

                    b.Property<string>("Name");

                    b.Property<string>("Race");

                    b.Property<string>("SkillsJson");

                    b.Property<int>("Smarts");

                    b.Property<int>("Spirit");

                    b.Property<int>("Strength");

                    b.Property<int>("Vigor");

                    b.Property<double>("Wealth");

                    b.Property<string>("WeaponsJson");

                    b.Property<int>("XP");

                    b.HasKey("Id");

                    b.ToTable("SWCharacters");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWEdge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<int>("EdgeTypeId");

                    b.Property<string>("Effects");

                    b.Property<string>("Name");

                    b.Property<string>("Requirement");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("SWEdges");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWEdgeCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Effects");

                    b.Property<string>("Name");

                    b.Property<string>("Requirement");

                    b.Property<string>("Text");

                    b.Property<string>("UserID");

                    b.HasKey("Id");

                    b.ToTable("SWEdgesCustom");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWEdgeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("SWEdgeTypes");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWHindrance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<string>("Effects");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("SWHindrances");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWHindranceCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Effects");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<string>("Text");

                    b.Property<string>("UserID");

                    b.HasKey("Id");

                    b.ToTable("SWHindrancesCustom");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWMundaneItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<double>("Cost");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.ToTable("SWMundaneItems");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWMundaneItemCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cost");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.Property<string>("UserID");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.ToTable("SWMundaneItemsCustom");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiersJson");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SWRaces");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWRaceCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<string>("Description");

                    b.Property<string>("ModifiersJson");

                    b.Property<string>("Name");

                    b.Property<string>("UserID");

                    b.HasKey("Id");

                    b.ToTable("SWRacesCustom");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<int>("LinkedAttribute");

                    b.Property<string>("Name");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("SWSkills");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWSkillCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LinkedAttribute");

                    b.Property<string>("Name");

                    b.Property<string>("Text");

                    b.Property<string>("UserID");

                    b.HasKey("Id");

                    b.ToTable("SWSkillCustom");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<double>("Cost");

                    b.Property<string>("Damage");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<int>("TimePeriod");

                    b.Property<int>("Type");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.ToTable("SWWeapons");
                });

            modelBuilder.Entity("RPGPlaza.Models.SWWeaponCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cost");

                    b.Property<string>("Damage");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<int>("TimePeriod");

                    b.Property<int>("Type");

                    b.Property<string>("UserID");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.ToTable("SWWeaponsCustom");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("RPGPlaza.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("RPGPlaza.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RPGPlaza.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("RPGPlaza.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
